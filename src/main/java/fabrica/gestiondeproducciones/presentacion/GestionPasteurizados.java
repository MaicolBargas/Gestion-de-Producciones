
package fabrica.gestiondeproducciones.presentacion;

import fabrica.gestiondeproducciones.dominio.Controlador;
import fabrica.gestiondeproducciones.dominio.IngresoLeche;
import fabrica.gestiondeproducciones.dominio.LechePasteurizada;
import fabrica.gestiondeproducciones.utilidades.Utilidades;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class GestionPasteurizados extends javax.swing.JInternalFrame {

    Utilidades utilidad = new Utilidades();
    LechePasteurizada lecheP = new LechePasteurizada();
    Controlador controlador = new Controlador();
    DefaultTableModel modelo = new DefaultTableModel();
    DefaultTableModel modeloIngresos = new DefaultTableModel();

    /**
     * Creates new form GestionPasteurizados
     */
    public GestionPasteurizados() {
        initComponents();
        listar();
        lblCrema.setVisible(false);
        txtCrema.setVisible(false);
        txtLitros.setEditable(true);
    }

    private void listar(){
        limpiarTabla();
        listarIngresos();
        List<LechePasteurizada> lista = controlador.listarPasteurizados();
        modelo = (DefaultTableModel) tablaPasteurizados.getModel();
        Object[] objeto = new Object[7];
        for(int i = 0; i < lista.size(); i++){
            objeto[0] = lista.get(i).getId();
            objeto[1] = lista.get(i).getTemperatura();
            objeto[2] = lista.get(i).getLitros();
            objeto[3] = lista.get(i).getIngreso().getIdIngreso() + " - " +lista.get(i).getIngreso().getTambo().getPropietario()+ " - " +lista.get(i).getIngreso().getLitrosDisponibles()+ " L";
            objeto[4] = lista.get(i).getDescremado();
            objeto[5] = lista.get(i).getCrema();
            objeto[6]=lista.get(i).getCremaDisponible();
            System.out.println(objeto[6]);
            modelo.addRow(objeto);
        }
        tablaPasteurizados.setModel(modelo);
    }
        
    private void listarIngresos(){     
        limpiarTablaIngresos();
        List<IngresoLeche> lista = controlador.listarIngresos();
        modeloIngresos = (DefaultTableModel) tablaIngresos.getModel();
        Object[] objeto = new Object[5];
        for(int i = 0; i < lista.size(); i++){
            if(lista.get(i).getLitrosDisponibles() > 0){
                objeto[0] = lista.get(i).getIdIngreso();
                objeto[1] = lista.get(i).getTambo().getPropietario();
                objeto[2] = lista.get(i).getLitrosDisponibles();
                objeto[3] = lista.get(i).getSilo().getCodigoInterno();
                objeto[4] = lista.get(i).getFecha();
                modeloIngresos.addRow(objeto);
            }
        }
        tablaIngresos.setModel(modeloIngresos);
    }
    
    private void limpiarTabla(){
        for(int i = 0; i < modelo.getRowCount(); i++){
            modelo.removeRow(i);
            i =- 1;
        }
    }
    
    private void limpiarTablaIngresos(){
        for(int i = 0; i < modeloIngresos.getRowCount(); i++){
            modeloIngresos.removeRow(i);
            i =- 1;
        }
    }
    
    public void limpiarFormulario(){
        txtId.setText("");
        txtTemperatura.setText("");
        txtLitros.setText("");
        txtLitros.setEditable(true);
        txtIngreso.setText("");
        txtCrema.setText("");
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblCrema = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtTemperatura = new javax.swing.JTextField();
        txtLitros = new javax.swing.JTextField();
        txtCrema = new javax.swing.JTextField();
        txtIngreso = new javax.swing.JTextField();
        chkDescremada = new javax.swing.JCheckBox();
        txtCremaDisponible = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnLimpiar = new javax.swing.JButton();
        btnAlta = new javax.swing.JButton();
        btnBaja = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaIngresos = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPasteurizados = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion de leche pasteurizada");
        setToolTipText("");

        jLabel1.setText("Id:");

        jLabel2.setText("Temperatura:");

        jLabel3.setText("Litros:");

        jLabel4.setText("Ingreso de leche utilizada:");

        lblCrema.setText("Crema obtenida:");

        txtId.setEditable(false);

        txtIngreso.setEditable(false);
        txtIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIngresoActionPerformed(evt);
            }
        });

        chkDescremada.setText("Es descremada");
        chkDescremada.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkDescremadaStateChanged(evt);
            }
        });
        chkDescremada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkDescremadaMouseClicked(evt);
            }
        });

        txtCremaDisponible.setEditable(false);

        jLabel5.setText("Crema Disponible:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblCrema)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCrema, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtLitros, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(txtTemperatura)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(chkDescremada, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCremaDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLitros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(chkDescremada)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCrema)
                    .addComponent(txtCrema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCremaDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnAlta.setText("Alta");
        btnAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaActionPerformed(evt);
            }
        });

        btnBaja.setText("Baja");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addGap(18, 18, 18)
                .addComponent(btnAlta)
                .addGap(18, 18, 18)
                .addComponent(btnBaja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificar)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiar)
                    .addComponent(btnAlta)
                    .addComponent(btnBaja)
                    .addComponent(btnModificar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setText("Seleccionar Ingreso de Leche");

        tablaIngresos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Tambo", "Litros Disponibles", "Silo", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaIngresos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaIngresosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaIngresos);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tablaPasteurizados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Temperatura", "Litros", "Ingreso de leche utilizado", "Descremado", "Crema obtenida", "Crema Disponible"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPasteurizados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPasteurizadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPasteurizados);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIngresoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIngresoActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarFormulario();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaActionPerformed
        try{
            int temperatura = utilidad.validarNumericos(txtTemperatura.getText(), "Temperatura", false);
            int litros = utilidad.validarNumericos(txtLitros.getText(), "Litros", false);           
            String[] partes = txtIngreso.getText().split(" - ");
            IngresoLeche ingreso = controlador.buscarIngreso(Integer.parseInt(partes[0]));
            boolean esDescremada = chkDescremada.isSelected();
            int crema = 0;
            if(esDescremada){
               crema = utilidad.validarNumericos(txtCrema.getText(), "Crema", true);           
            }
                      
            lecheP.setTemperatura(temperatura);   
            lecheP.setLitros(litros);
            if(ingreso instanceof IngresoLeche){
                if(litros > ingreso.getLitrosDisponibles()){
                    throw new Exception("El ingreso de leche seleccionado no tiene los suficientes litros para pasteurizar");
                }
                lecheP.setIngreso(ingreso);
            }else{ throw new Exception("El ingreso seleccionado ya no esta disponible");}

            lecheP.setDescremado(esDescremada);
            lecheP.setCrema(crema);
            lecheP.setCremaDisponible(crema);
            

            boolean alta = controlador.altaPasteurizado(lecheP);
            if(alta){
              JOptionPane.showMessageDialog(null, "Pasteurizado dado de alta.");
              actualizarLitros(ingreso, litros);
              limpiarFormulario();
              listar();
        }
      }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Advertencia", JOptionPane.WARNING_MESSAGE);
      }
    }//GEN-LAST:event_btnAltaActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        try{
            int id = utilidad.validarNumericos(txtId.getText(), "Id", false);
            boolean baja = controlador.bajaPasteurizado(id);
            if(baja){
                JOptionPane.showMessageDialog(null, "Pasteurizado dado de baja.");
                limpiarFormulario();
                listar();
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBajaActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try{
            int id= Integer.parseInt(txtId.getText());
            int temperatura = utilidad.validarNumericos(txtTemperatura.getText(), "Temperatura", false);
            int litros = utilidad.validarNumericos(txtLitros.getText(), "Litros", false);           
            String[] partes = txtIngreso.getText().split(" - ");
            IngresoLeche ingreso = controlador.buscarIngreso(Integer.parseInt(partes[0]));
            boolean esDescremada = chkDescremada.isSelected();
            int crema = utilidad.validarNumericos(txtLitros.getText(),"Cant Crema", false);
            if(esDescremada){
               crema = utilidad.validarNumericos(txtCrema.getText(), "Crema", true);           
            }
                 
            lecheP.setTemperatura(temperatura);   
            lecheP.setLitros(litros);
            if(ingreso instanceof IngresoLeche){                
                lecheP.setIngreso(ingreso);
            }else{ throw new Exception("El ingreso seleccionado ya no esta disponible");}
            
            int diferencia;
            LechePasteurizada p= new LechePasteurizada();
            Controlador c= new Controlador();
            p=c.buscarPasteurizado(id);
            int actual=p.getCrema();
            if(p.getCrema()<=crema){
                diferencia=crema-actual;
                lecheP.setCremaDisponible(p.getCrema()+diferencia);
                System.out.println(diferencia+" DIFERENCIA 1"+" ACTUAL "+ actual +" Nuevo "+ crema);
            }
            if(p.getCrema()>crema){
                diferencia=actual-crema;
                if(diferencia<=p.getCremaDisponible()){
                lecheP.setCremaDisponible(p.getCrema()-diferencia);
                    System.out.println(diferencia+" DIFERENCIA 2"+" ACTUAL "+ actual +" Nuevo "+ crema);
                }
                else
                {
                    throw new Exception("Error Al Establecer Crema disponible, porfavor Verifique los valores o las producciones"
                            + "en las cuales utilizo la Crema");
                }
            }
            
            lecheP.setDescremado(esDescremada);
            lecheP.setCrema(crema);
            lecheP.setId(id);

            boolean modificar = controlador.modificarPasteurizado(lecheP);
            if(modificar){
                JOptionPane.showMessageDialog(null, "Pasteurizado modificado correctamente.");
                limpiarFormulario();
                listar();
            } 
        }catch (Exception ex) {
          JOptionPane.showMessageDialog(null, ex.getMessage(),"Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void tablaPasteurizadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPasteurizadosMouseClicked
        int fila = tablaPasteurizados.rowAtPoint(evt.getPoint());
        txtId.setText(tablaPasteurizados.getValueAt(fila, 0).toString());
        txtTemperatura.setText(tablaPasteurizados.getValueAt(fila, 1).toString());
        txtLitros.setText(tablaPasteurizados.getValueAt(fila, 2).toString());
        txtLitros.setEditable(false);
        txtIngreso.setText(tablaPasteurizados.getValueAt(fila, 3).toString());
        boolean checked = (boolean) tablaPasteurizados.getValueAt(fila, 4);       
        chkDescremada.setSelected(checked);        
        txtCrema.setText(tablaPasteurizados.getValueAt(fila, 5).toString()); 
        txtCremaDisponible.setText(tablaPasteurizados.getValueAt(fila, 6).toString());
    }//GEN-LAST:event_tablaPasteurizadosMouseClicked

    private void tablaIngresosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaIngresosMouseClicked
        int fila = tablaIngresos.rowAtPoint(evt.getPoint());
        String id = tablaIngresos.getValueAt(fila, 0).toString();
        String tambo = tablaIngresos.getValueAt(fila, 1).toString();
        String litros = tablaIngresos.getValueAt(fila, 2).toString() + " L ";
        txtIngreso.setText(id + " - " +tambo +" - "+ litros);
    }//GEN-LAST:event_tablaIngresosMouseClicked

    private void chkDescremadaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkDescremadaStateChanged

    }//GEN-LAST:event_chkDescremadaStateChanged

    private void chkDescremadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkDescremadaMouseClicked
        if(chkDescremada.isSelected()){
           lblCrema.setVisible(true);
           txtCrema.setVisible(true);
       }else{
            lblCrema.setVisible(false);
            txtCrema.setVisible(false);
       }
    }//GEN-LAST:event_chkDescremadaMouseClicked

    private void actualizarLitros(IngresoLeche ingreso, int litrosUtilizados){
        int litrosDisponibles = ingreso.getLitrosDisponibles();       
        ingreso.setLitrosDisponibles(litrosDisponibles - litrosUtilizados);
        controlador.modificarIngreso(ingreso);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlta;
    private javax.swing.JButton btnBaja;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JCheckBox chkDescremada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCrema;
    private javax.swing.JTable tablaIngresos;
    private javax.swing.JTable tablaPasteurizados;
    private javax.swing.JTextField txtCrema;
    private javax.swing.JTextField txtCremaDisponible;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIngreso;
    private javax.swing.JTextField txtLitros;
    private javax.swing.JTextField txtTemperatura;
    // End of variables declaration//GEN-END:variables
}
